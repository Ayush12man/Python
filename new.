22,23

# Import Required Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm
from statsmodels.formula.api import ols
import statsmodels.api as sm
import plotly.express as px
import plotly.graph_objects as go
# Input Data
data = pd.DataFrame({
'Temperature': np.tile(['Low', 'Low', 'High', 'High'], 2),
'Time': np.repeat(['Short', 'Long'], 4),
'Yield': [20, 22, 30, 28, 40, 42, 50, 48]
})
print(data)

# Interaction Plot using seaborn's pointplot
plt.figure(figsize=(8,6))
sns.pointplot(x="Temperature", y="Yield", hue="Time", data=data, markers=["o", "s"], linestyles=["-", "--"], palette="Set1")
plt.title('Interaction Plot: Temperature and Time')
plt.xlabel('Temperature')
plt.ylabel('Yield')
plt.show()

# Fit the linear Model with Main Effects Only
Model_lm1 = ols('Yield ~ Temperature + Time', data=data).fit()
print(Model_lm1.summary())

# Fit the linear Model with Main and Interaction Effects
Model_lm2 = ols('Yield ~ Temperature * Time', data=data).fit()
print(Model_lm2.summary())

# Get ANOVA Table
anova_table1 = sm.stats.anova_lm(Model_lm1, typ=2)
print(anova_table1)

anova_table2 = sm.stats.anova_lm(Model_lm2, typ=2)
print(anova_table2)

îŒ“ Q2
# Create Speed, FeedRate, Material, and Hardness Data
speed_data = pd.DataFrame({
'Speed': np.tile(['Low', 'Low', 'Low', 'Low', 'High', 'High', 'High', 'High'], 2),
'FeedRate': np.repeat(['Low', 'Low', 'High', 'High'], 4),
'Material': np.tile(['Type 1', 'Type 2'], 8),
'Hardness': [50, 55, 60, 65, 70, 75, 80, 85, 52, 56, 62, 66, 72, 76, 82, 86]
})
print(speed_data)

# Fit the ANOVA Model
Model = ols('Hardness ~ Speed * FeedRate * Material', data=speed_data).fit()
anova_summary = sm.stats.anova_lm(Model, typ=2)
print(anova_summary)

# Interaction Plot for Speed and FeedRate using a categorical plot
sns.set(style="whitegrid")
# Using catplot, which is better suited for categorical data like 'Speed' and 'FeedRate'
sns.catplot(x='Speed', y='Hardness', hue='FeedRate', data=speed_data, kind='point', aspect=1.5)
plt.title('Interaction Plot: Speed and FeedRate')
plt.xlabel('Speed')
plt.ylabel('Hardness')
plt.show()
# Interaction Plot for Speed and Material using a categorical plot
sns.set(style="whitegrid")
# Using catplot, which is better suited for categorical data like 'Speed' and 'Material'
sns.catplot(x='Speed', y='Hardness', hue='Material', data=speed_data, kind='point', aspect=1.5)
plt.title('Interaction Plot: Speed and Material')
plt.xlabel('Speed')
plt.ylabel('Hardness')
plt.show()

# Interaction Plot for FeedRate and Material using a categorical plot
sns.set(style="whitegrid")
# Using catplot, which is better suited for categorical data like 'FeedRate' and 'Material'
sns.catplot(x='FeedRate', y='Hardness', hue='Material', data=speed_data, kind='point', aspect=1.5)
plt.title('Interaction Plot: FeedRate and Material')
plt.xlabel('FeedRate')
plt.ylabel('Hardness')
plt.show()
